<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>可乐的小屋</title>
  
  <subtitle>码字</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://steven2947.github.io/"/>
  <updated>2019-05-29T06:52:35.651Z</updated>
  <id>https://steven2947.github.io/</id>
  
  <author>
    <name>可乐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android install apk 兼容至 Android 8</title>
    <link href="https://steven2947.github.io/2018/06/07/Android%20install%20apk%20%E5%85%BC%E5%AE%B9%E8%87%B3%20Android%208/"/>
    <id>https://steven2947.github.io/2018/06/07/Android install apk 兼容至 Android 8/</id>
    <published>2018-06-07T03:55:33.000Z</published>
    <updated>2019-05-29T06:52:35.651Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;以往安装apk都是很简单的方法, Intent 里添加apk的文件就可以调用系统安装界面.后来随着谷歌对安全的重视,从Android 7开始以往的方式都不能用,然而到Android 8 又有改动,相信随着Android 的发展,以后的版本也会有改动,崇尚模块化开发的我便希望每一个细小的功能,颗粒度最少的功能都可以由一个模块来负责,然后每个项目需要这个功能时调用这个模块即可,而这个模块只需要维护好自己的兼容性问题便解决所有项目的兼容性问题.&lt;/p&gt;
&lt;p&gt;本文思路是提供一个笔者暂时觉得最优的方案,然后原理分析提供每个Android 版本的安装的原理思路&lt;/p&gt;
    
    </summary>
    
      <category term="移动开发" scheme="https://steven2947.github.io/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="https://steven2947.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RetrofitCache 源码分析</title>
    <link href="https://steven2947.github.io/2018/05/22/RetrofitCache%20%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://steven2947.github.io/2018/05/22/RetrofitCache 源码分析/</id>
    <published>2018-05-22T07:43:33.000Z</published>
    <updated>2019-05-29T06:52:26.899Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近工作项目里添加网络缓存时看了这个项目,内容不多,有些方法可取便记录下来&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/yale8848/RetrofitCache&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RetrofitCache&lt;/a&gt; 使用的方式是okhttp原有的cache机制,然后它提供了标签的方式,在Retrofit上简单实现,减少代码入侵,这是这个库的价值.&lt;/p&gt;
    
    </summary>
    
      <category term="移动开发" scheme="https://steven2947.github.io/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="源码解读" scheme="https://steven2947.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
      <category term="Android" scheme="https://steven2947.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Gesture 手势研究</title>
    <link href="https://steven2947.github.io/2017/05/05/Android%20Gesture%20%E6%89%8B%E5%8A%BF%E7%A0%94%E7%A9%B6/"/>
    <id>https://steven2947.github.io/2017/05/05/Android Gesture 手势研究/</id>
    <published>2017-05-05T05:15:33.000Z</published>
    <updated>2019-05-29T06:52:13.171Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;怎么理解一个手势,就是在屏幕上,手画一个符号就是一个手势,它代表了用户的一个意图,也就是用户希望程序做点什么,一般程序大多数是通过按钮,按钮上有对应的文字,这样进行人机交互,而手势也是很多地方会使用到,而常用的手势好像下拉刷新,用户希望列表内容下拉一下就有新的信息,双指缩放等等,一般这些手势都是跟对应的view绑定起来,而今天介绍的都是方法是可以不绑定view,直接在界面上画一个手势就可以人机交互.实现的代码可以在&lt;a href=&quot;https://github.com/steven2947/gestureDemo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github上的Demo源码&lt;/a&gt;了解.&lt;/p&gt;
&lt;p&gt;这篇手势研究会大概分三部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;手势Gesture使用方式&lt;/li&gt;
&lt;li&gt;展示手势开发的步骤及代码实现&lt;/li&gt;
&lt;li&gt;分析Gesture的源码及原理&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="移动开发" scheme="https://steven2947.github.io/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="源码解读" scheme="https://steven2947.github.io/tags/%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/"/>
    
      <category term="Android" scheme="https://steven2947.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
